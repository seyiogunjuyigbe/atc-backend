# User paths
  /users:
    get:
      summary: Admin view all users
      description: Display all users on the platform for Admin
      operationId: listUsers
      tags:
      - Users
      parameters:
        $ref: "#/definitions/GetAuthQuery"
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
        403:
          description: Not authorized
          schema:
            example:
              message: You are not authorized to access this resource
        500:
          description: Unexpected server error
          schema:
            example:
              message: An unexpected error occured
   
  
  /users/{userId}:
    get:
      summary: Retrieve User
      description: Retrive User on African Travel Club
      operationId: retrieveUser
      tags:
      - Users
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
        403:
          description: Not authorized
          schema:
            example:
              message: You are not authorized to access this resource
        500:
          description: Unexpected server error
          schema:
            example:
              message: An unexpected error occured
    put:
      summary: Admin edit a user or user updates own account
      description: Update a particular user
      operationId: updateUser
      tags:
      - Users
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
        - in: path
          name: userId
          description: User id to update
          required: true
        - in: body
          name: payload
          description: User data to update
          schema:
            # $ref: "#/definitions/User"
            example:
              email: user@example.com
              password: Pas$W0rd
              firstName: John
              lastName: Doe
              phone: "+12332345678"

      responses:
        200:
          description: Success
          schema:
            example:
              message: User data successfully updated
        400:
          description: Bad request
          schema:
            example:
              message: Missing required parameters
        403:
          description: Not authorized
          schema:
            example:
              message: You are not authorized to perform this action
        500:
          description: Unexpected server error
          schema:
            example:
              message: An unexpected error occured
  
  /users/{userId}/change-email:
    post:
      summary: Change user email
      operationId: changeEmail
      tags:
      - Users
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
        - in: path
          name: userId
          description: User Id to change email for
          required: true
        - in: body
          name: payload
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                required: true
              password:
                type: string
                required: true
      responses:
        200:
          description: Success
          schema:
            example:
              message: User email successfully changed.
        403:
          description: Not authorized
          schema:
            example:
              message: You are not authorized to access this resource
        500:
          description: Unexpected server error
          schema:
            example:
              message: An unexpected error occured

  /users/{userId}/upload-image:
    post:
      summary: Upload user profile picture
      operationId: uploadProfilePicture
      tags:
      - Users
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
        - in: path
          name: userId
          description: User Id to upload image for
          required: true
        - in: body
          name: image
          description: Image to upload using formData
      responses:
        200:
          description: Success
          schema:
            example:
              message: Image successfully uploaded.
        403:
          description: Not authorized
          schema:
            example:
              message: You are not authorized to access this resource
        500:
          description: Unexpected server error
          schema:
            example:
              message: An unexpected error occured

  /users/search:
    get:
      summary: Search User
      description: Search User on African Travel Club
      operationId: searchUsers
      tags:
      - Users
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
        - in: query
          name: q
          description: value to search for e.g akin, lagos, make up
          required: true
        - in: query
          name: by
          description: field to search by. defaults to "all" if nothing specified
          enum: [location, category, name, all]
        - in: query
          name: role
          description: role to search for. defaults to "vendor" if nothing specified and is not admin
          enum: [customer, vendor]
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
        403:
          description: Not authorized
          schema:
            example:
              message: You are not authorized to access this resource
        500:
          description: Unexpected server error
          schema:
            example:
              message: An unexpected error occured

  /users/{userId}/login-details:
    post:
      summary: Save login details for vendor
      operationId: saveLoginDetails
      tags:
      - Users
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
        - in: path
          name: userId
          description: User Id to save login details for
          required: true
        - in: body
          name: payload
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                required: true
              password:
                type: string
                required: true
      responses:
        200:
          description: Success
          schema:
            example:
              message: Login details saved successfully.
        403:
          description: Not authorized
          schema:
            example:
              message: You are not authorized to access this resource
        500:
          description: Unexpected server error
          schema:
            example:
              message: An unexpected error occured

  /users/{userId}/subscribe:
    post:
      summary: Subscribe user to package
      operationId: subscribeToPackage
      tags:
      - Users
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
        - in: path
          name: userId
          description: User Id
          required: true
        - in: body
          name: payload
          required: true
          schema:
            type: object
            properties:
              packageId:
                type: string
                required: true
                description: Package ID to subscribe
      responses:
        200:
          description: Success
          schema:
            example:
              message: User subscribed to package successfully.
        403:
          description: Not authorized
          schema:
            example:
              message: You are not authorized to access this resource
        500:
          description: Unexpected server error
          schema:
            example:
              message: An unexpected error occured

  /users/{vendorId}/favorite:
    post:
      summary: Add or Remove vendor as favorite
      operationId: favoriteVendor
      tags:
      - Users
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
        - in: path
          name: vendorId
          description: Vendor Id
          required: true
        - in: body
          name: payload
          required: true
          schema:
            type: object
            properties:
              action:
                type: string
                required: true
                enum: [add, remove]
                example: remove
                description: whether to add or remove
      responses:
        200:
          description: Success
          schema:
            example:
              message: Vendor favorited successfully.
        403:
          description: Not authorized
          schema:
            example:
              message: You are not authorized to access this resource
        500:
          description: Unexpected server error
          schema:
            example:
              message: An unexpected error occured

  /users/{userId}/visits:
    get:
      summary: Get user visits
      operationId: getUserVisits
      tags:
      - Users
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
        - in: path
          name: userId
          description: User Id
          required: true
      responses:
        200:
          description: Success
          schema:
            example:
              message: Visits retrieved successfully.
        403:
          description: Not authorized
          schema:
            example:
              message: You are not authorized to access this resource
        500:
          description: Unexpected server error
          schema:
            example:
              message: An unexpected error occured
