# Product Paths

  /products:
    post:
      summary: Create new product
      description: Create a new product
      operationId: createProduct
      tags:
        - Products
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
        - in: body
          name: payload
          description: Product details
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        200:
          description: Success
          schema:
            example:
              message: Product created successfully.
    get:
      summary: View all products
      description: Display all products
      operationId: listProducts
      tags:
        - Products
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
        - in: query
          name: status
          description: getting params by filter
          enum: [active, canceled, paused, waiting, expired]
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Products'
        403:
          description: Not authorized
          schema:
            example:
              message: You are not authorized to access this resource
        500:
          description: Unexpected server error
          schema:
            example:
              message: An unexpected error occured
  /products/{productId}:
    get:
      summary: Get a single product
      operationId: viewProduct
      tags:
        - Products
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
        - in: path
          name: productId
          description: Product ID
          required: true
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'

        403:
          description: Not authorized
          schema:
            example:
              message: You are not authorized to access this resource
        500:
          description: Unexpected server error
          schema:
            example:
              message: An unexpected error occured
    put:
      summary: Update product
      description: Update a particular product
      operationId: updateProduct
      tags:
        - Products
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
        - in: path
          name: productId
          description: product id to update
          required: true
        - in: body
          name: payload
          description: product data to update
          schema:
            $ref: '#/definitions/Product'
      responses:
        200:
          description: Success
          schema:
            example:
              message: Membership data successfully updated
        400:
          description: Bad request
          schema:
            example:
              message: Missing required parameters
        403:
          description: Not authorized
          schema:
            example:
              message: You are not authorized to perform this action
        500:
          description: Unexpected server error
          schema:
            example:
              message: An unexpected error occured
  /products/{productId}/purchase:
    post:
      summary: Purchase a product
      description: Purchase a product
      operationId: purchaseProduct
      tags:
        - Products
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
        - in: body
          name: payload
          description: Product details
          required: true
          schema:
            type: object
            properties:
              amount:
                type: number
                required: true
                description: AMount to be paid
              currency:
                type: string
                description: currency. defaults to usd
      responses:
        200:
          description: Success
          schema:
            example:
              message: Product payment initiated successfully.
  /products/{productId}/priority:
    put:
      summary: Update Product Priority (Admin)
      description: Update a particular product's priority
      operationId: updateProductPriority
      tags:
      - Products
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
        - in: path
          name: productId
          description: Product id to update
          required: true
        - in: body
          name: priority
          description: New product priority
          type: integer
          schema:
            type: string
      responses:
        200:
          description: Success
          schema:
            example:
              message: Product priority updated
        400:
          description: Bad request
          schema:
            example:
              message: Missing required parameters
        403:
          description: Not authorized
          schema:
            example:
              message: You are not authorized to perform this action
        500:
          description: Unexpected server error
          schema:
            example:
              message: An unexpected error occured
  /products/priority:
    get:
      summary: Fetch home page products
      description: Fetch home page products
      operationId: fetchHomePageProducts
      tags:
      - Products
      parameters:
        - in: query
          name: status
          description: Search by status
        - in: query
          name: orderBy
          description: Field to sort
        - in: query
          name: order
          description: Sort order
        - in: query
          name: typeId
          description: Search ID (e.g category ID)
        - in: query
          name: type
          description: Search in array field (e.g sightCategories)
        - in: query
          name: populate[]
          description: Object field(s) to populate
        - in: query
          name: limit
          description: Number of results per page
        - in: query
          name: offset
      responses:
        200:
          description: Success
          schema:
            example:
              type: array
              message: Products
        500:
          description: Unexpected server error
          schema:
            example:
              message: An unexpected error occured
  /products/product_cycle/{productId}:
    get:
      summary: Get a single product life cycle
      operationId: viewProduct
      tags:
        - Products
      parameters:
        - in: header
          name: Authorization
          description: Authentication token
          required: true
        - in: path
          name: productId
          description: Product ID
          required: true
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductLifeCycle'

        403:
          description: Not authorized
          schema:
            example:
              message: You are not authorized to access this resource
        500:
          description: Unexpected server error
          schema:
            example:
              message: An unexpected error occured